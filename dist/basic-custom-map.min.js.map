{"version":3,"sources":["webpack://basicCustomMap/webpack/universalModuleDefinition","webpack://basicCustomMap/webpack/bootstrap","webpack://basicCustomMap/./src/text-svg-component.ts","webpack://basicCustomMap/./src/image-svg-component.ts","webpack://basicCustomMap/external \"Snap\"","webpack://basicCustomMap/./src/map-pin-svg-component.ts","webpack://basicCustomMap/./src/map-svg-component.ts","webpack://basicCustomMap/./src/index.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","default","[object Object]","text","snapCtx","position","dimensions","fontSize","this","Promise","resolve","reject","x","y","imageSource","image","width","height","image_svg_component_1","text_svg_component_1","pinImage","nameFontSize","namePosition","imageText","draw","then","map_pin_svg_component_1","title","pins","mapImage","titleFontSize","titlePosition","mapTitle","pin","pinSize","pinDimensions","map_svg_component_1","Snap","createMap","svgId","map","svgElement","document","getElementById","mapDimensions","baseVal","valueInSpecifiedUnits","console","log"],"mappings":"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","file":"basic-custom-map.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Snap\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"basicCustomMap\", [\"Snap\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"basicCustomMap\"] = factory(require(\"Snap\"));\n\telse\n\t\troot[\"basicCustomMap\"] = factory(root[\"Snap\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import SvgComponent from \"./svg-component\";\r\nimport Position from \"./position\";\r\nimport Dimensions from \"./dimensions\";\r\n\r\nexport default class TextSvgComponent implements SvgComponent{\r\n\r\n  constructor(private text: string, public snapCtx: Snap.Paper, public position: Position, public dimensions: Dimensions, public fontSize: number = 10){}\r\n\r\n  draw() : Promise<void> {\r\n    return new Promise<void>( (resolve: ()=> any, reject: ()=> any) => {\r\n      //this.snapCtx.font = this.fontSize + 'px serif';\r\n      this.snapCtx.text(this.position.x, this.position.y, this.text);\r\n      resolve();\r\n    });\r\n  }\r\n}\r\n","import SvgComponent from \"./svg-component\";\r\nimport Position from \"./position\";\r\nimport Dimensions from \"./dimensions\";\r\n\r\nexport default class ImageSvgComponent implements SvgComponent{\r\n\r\n  constructor(private imageSource: string, public snapCtx: Snap.Paper, public position: Position, public dimensions: Dimensions){}\r\n\r\n  draw() : Promise<void> {\r\n    return new Promise<void>( (resolve: any, reject: any) => {\r\n      this.snapCtx.image(this.imageSource, this.position.x, this.position.y, this.dimensions.width, this.dimensions.height);\r\n      resolve();\r\n    });\r\n  }\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import ImageSvgComponent from \"./image-svg-component\"\r\nimport TextSvgComponent from \"./text-svg-component\"\r\nimport SvgComponent from \"./svg-component\";\r\nimport Position from \"./position\";\r\nimport Dimensions from \"./dimensions\";\r\nimport Utils from \"./utils\";\r\n\r\nexport default class MapPinSvgComponent implements SvgComponent {\r\n\r\n  constructor(private name:string, private imageSource: string, public snapCtx: Snap.Paper, public position: Position, public dimensions: Dimensions){}\r\n\r\n  draw() {\r\n    return new Promise<void>( (resolve: ()=> any, reject: ()=> any) => {\r\n      let pinImage: ImageSvgComponent = new ImageSvgComponent(this.imageSource, this.snapCtx, this.position, this.dimensions);\r\n      let nameFontSize = this.dimensions.height * 0.25;\r\n      //let nameWidth: number = Utils.getTextWidthBasedOnFontSize(this.snapCtx, this.name, nameFontSize);\r\n      let nameX: number = this.position.x - this.dimensions.width/2;\r\n      let nameY: number = this.position.y + this.dimensions.height + nameFontSize;\r\n      let namePosition: Position = { x: nameX, y: nameY};\r\n      let imageText: TextSvgComponent = new TextSvgComponent(this.name, this.snapCtx, namePosition, this.dimensions, nameFontSize);\r\n      pinImage.draw().then( () => {\r\n        imageText.draw();\r\n      });\r\n      resolve();\r\n    });\r\n  }\r\n}\r\n","import MapPinSvgComponent from \"./map-pin-svg-component\";\r\nimport ImageSvgComponent from \"./image-svg-component\";\r\nimport TextSvgComponent from \"./text-svg-component\";\r\nimport SvgComponent from \"./svg-component\";\r\nimport Position from \"./position\";\r\nimport Dimensions from \"./dimensions\";\r\nimport Utils from \"./utils\";\r\n\r\nexport default class MapSvgComponent implements SvgComponent {\r\n\r\n  constructor(private title: string, private imageSource: string, private pins: Array<any>, public snapCtx: Snap.Paper, public position: Position, public dimensions: Dimensions){}\r\n\r\n  draw() : Promise<void> {\r\n    return new Promise<void>( (resolve: ()=> any, reject: ()=> any) => {\r\n      let mapImage: ImageSvgComponent = new ImageSvgComponent(this.imageSource, this.snapCtx, this.position, this.dimensions);\r\n      let titleFontSize: number = this.dimensions.height * 0.075;\r\n      //let titleTextWidth: number = Utils.getTextWidthBasedOnFontSize(this.snapCtx, this.title, titleFontSize);\r\n      let titleX: number = this.position.x - this.dimensions.width/2;\r\n      let titleY: number = this.position.y + (this.dimensions.height * 0.075);\r\n      let titlePosition: Position = { x: titleX, y: titleY};\r\n      let mapTitle: TextSvgComponent = new TextSvgComponent(this.title, this.snapCtx, titlePosition, this.dimensions, titleFontSize);\r\n      mapImage.draw().then( () => {\r\n        for(let pin of this.pins){\r\n          let pinSize: number = this.dimensions.width * 0.075;\r\n          let pinDimensions: Dimensions = { width: pinSize, height: pinSize};\r\n          let mapPin = new MapPinSvgComponent(pin.name, pin.imageSource, this.snapCtx, pin.position, pinDimensions);\r\n          mapPin.draw();\r\n        }\r\n        mapTitle.draw();\r\n      });\r\n      resolve();\r\n    });\r\n  }\r\n}\r\n","import MapSvgComponent from \"./map-svg-component\";\r\nimport Position from \"./position\";\r\nimport Dimensions from \"./dimensions\";\r\n\r\nimport Snap = require(\"snapsvg\");\r\n\r\nexport function createMap (svgId: string, map: any)  {\r\n  let snapCtx : Snap.Paper = Snap('#' + svgId);\r\n  let svgElement : SVGSVGElement | any = document.getElementById(svgId);\r\n  let mapWidth: number = svgElement.width.baseVal.valueInSpecifiedUnits\r\n  let mapHeight: number = svgElement.height.baseVal.valueInSpecifiedUnits\r\n  let mapDimensions = { width: mapWidth, height: mapHeight};\r\n  let mapPosition: Position = { x: 0, y: 0 };\r\n  let canvasMap: MapSvgComponent = new MapSvgComponent(map.title, map.imageSource, map.pins, snapCtx, mapPosition, mapDimensions);\r\n  canvasMap.draw().then( () => {\r\n    console.log(\"finito!\");\r\n  });\r\n}\r\n"],"sourceRoot":""}